# Copyright Contributors to the Open Cluster Management project

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "controller.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "controller.fullname" . }}
    chart: {{ include "controller.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    addon.open-cluster-management.io/hosted-manifest-location: hosting
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "controller.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: {{ include "controller.fullname" . }}
        chart: {{ include "controller.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      containers:
      {{- if and .Values.prometheus.enabled (eq .Values.kubernetesDistribution "OpenShift") }}
      - name: kube-rbac-proxy
        image: "{{ .Values.global.imageOverrides.kube_rbac_proxy  }}"
        imagePullPolicy: "{{ .Values.global.imagePullPolicy }}"
        args:
        - --upstream=http://127.0.0.1:8383/
        - --logtostderr=true
        - --v=6
        - --secure-listen-address=0.0.0.0:8443
        - "--tls-cert-file=/var/run/metrics-cert/tls.crt"
        - "--tls-private-key-file=/var/run/metrics-cert/tls.key"
        - "--tls-min-version=VersionTLS13"
        ports:
        - name: metrics
          protocol: TCP
          containerPort: 8443
        volumeMounts:
        - mountPath: "/var/run/metrics-cert"
          name: metrics-cert
          readOnly: true
      {{- end }}
      - name: {{ .Chart.Name }}
        image: "{{ .Values.global.imageOverrides.config_policy_controller }}"
        imagePullPolicy: "{{ .Values.global.imagePullPolicy }}"
        command: ["config-policy-controller"]
        args:
          - "--enable-lease=true"
          - "--cluster-name={{ .Values.clusterName }}"
          {{- if semverCompare "< 1.14.0" .Capabilities.KubeVersion.Version }}
          - --legacy-leader-elect=true
          {{- end }}
          - --log-encoder={{ .Values.args.logEncoder }}
          - --log-level={{ .Values.args.logLevel }}
          - --v={{ .Values.args.pkgLogLevel }}
          - --evaluation-concurrency={{ .Values.args.evaluationConcurrency }}
          - --health-probe-bind-address=:8081
          {{- if and .Values.prometheus.enabled (ne .Values.kubernetesDistribution "OpenShift") }}
          - --metrics-bind-address=0.0.0.0:8383
          {{- end }}
          {{- if eq .Values.installMode "Hosted" }}
          - --target-kubeconfig-path=/var/run/managed-kubeconfig/kubeconfig
          {{- end }}
        env:
          - name: WATCH_NAMESPACE
            {{- if eq .Values.installMode "Hosted" }}
            value: {{ .Release.Namespace }}
            {{- else }}
            value: {{ .Values.clusterName }}
            {{- end }}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: {{ include "controller.fullname" . }}
          {{- if .Values.global.proxyConfig }}
          - name: HTTP_PROXY
            value: {{ .Values.global.proxyConfig.HTTP_PROXY }}
          - name: HTTPS_PROXY
            value: {{ .Values.global.proxyConfig.HTTPS_PROXY }}
          - name: NO_PROXY
            value: {{ .Values.global.proxyConfig.NO_PROXY }}
          {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          failureThreshold: 3
          periodSeconds: 10
          {{- if semverCompare "< 1.20.0" .Capabilities.KubeVersion.Version }}
          initialDelaySeconds: 300
          {{- end }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          failureThreshold: 3
          periodSeconds: 10
          {{- if semverCompare "< 1.20.0" .Capabilities.KubeVersion.Version }}
          initialDelaySeconds: 300
          {{- end }}
        {{- if semverCompare ">= 1.20.0" .Capabilities.KubeVersion.Version }}
        {{- /* startupProbe became stable in k8s 1.20 */}}
        startupProbe:
          httpGet:
            path: /readyz
            port: 8081
          failureThreshold: 30
          periodSeconds: 10
        {{- end }}
        {{- if and .Values.prometheus.enabled (ne .Values.kubernetesDistribution "OpenShift") }}
        ports:
        - name: metrics
          protocol: TCP
          containerPort: 8383
        {{- end }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        volumeMounts:
          - name: klusterlet-config
            mountPath: /var/run/klusterlet
          {{- if eq .Values.installMode "Hosted" }}
          - mountPath: "/var/run/managed-kubeconfig"
            name: managed-kubeconfig-secret
            readOnly: true
          {{- end }}
      volumes:
        - name: klusterlet-config
          secret:
            secretName: {{ .Values.hubKubeConfigSecret }}
        {{- if eq .Values.installMode "Hosted" }}
        - name: managed-kubeconfig-secret
          secret:
            secretName: {{ .Values.managedKubeConfigSecret }}
        {{- end }}
        {{- if and .Values.prometheus.enabled (eq .Values.kubernetesDistribution "OpenShift") }}
        - name: metrics-cert
          secret:
            secretName: {{ include "controller.fullname" . }}-metrics
        {{- end }}
      {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.global.imagePullSecret }}"
      {{- end }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      nodeSelector: {{ toYaml .Values.global.nodeSelector | nindent 8 }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      serviceAccount: {{ include "controller.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
